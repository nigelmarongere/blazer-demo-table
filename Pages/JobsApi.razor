@page "/fake-data-api"
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory

<table class="table table-striped"></table>
<thead>
    <tr>
        <th>userID</th>
        <th>ID</th>
        <th>Title</th>
        <th>Body</th>
    </tr>
</thead>
<tbody>
    @foreach (var element in fakeDataList)
    {
    <tr>
        <td>@element.userId</td>
        <td>@element.id</td>
        <td>@element.title</td>
        <td>@element.body</td>
    </tr>
    }
</tbody>

@code {

    public class FakeData
    {
        public int userId { get; set; }
        public int id { get; set; }
        public string title { get; set; }
        public string body { get; set; }
    }

    public List<FakeData> fakeDataList = new List<FakeData>();
    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "https://jsonplaceholder.typicode.com/posts");
        var client = ClientFactory.CreateClient();
        var response = await client.SendAsync(request);
        if (response.IsSuccessStatusCode)
        {
            await using var responseStream = await response.Content.ReadAsStreamAsync();
            fakeDataList = await JsonSerializer.DeserializeAsync<List<FakeData>>(responseStream);
        }
    }
}
